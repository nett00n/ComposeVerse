# docker-compose.yml

---
services:
  db:
    restart: always
    image: postgres:16-alpine
    volumes:
      - ${GLOBAL_DATA_FOLDER:-/Data}/tandoor/postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - default
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_PASSWORD}
      interval: 10s
      timeout: 3s
      retries: 3
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  app:
    restart: always
    image: vabene1111/recipes:${TANDOOR_VERSION:-1.5}
    env_file:
      - ./.env
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      - nginx_config:/opt/recipes/nginx/conf.d
      - ${GLOBAL_DATA_FOLDER:-/Data}/tandoor/mediafiles:/opt/recipes/mediafiles
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
    labels:
      com.centurylinklabs.watchtower.enable: "true"
  nginx:
    image: nginx:mainline-alpine
    restart: always
    env_file:
      - ./.env
    links:
      - app:web_recipes
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - nginx_config:/etc/nginx/conf.d:ro
      - staticfiles:/static:ro
      - ${GLOBAL_DATA_FOLDER:-/Data}/tandoor/mediafiles:/media:ro
    networks:
      - traefik_default
      - default
    labels:
      com.centurylinklabs.watchtower.enable: "true"
      traefik.docker.network: traefik_default
      traefik.enable: true
      traefik.http.routers.tandoor.entrypoints: websecure
      traefik.http.routers.tandoor.rule: Host(`${SERVICE_NAME_OVERRIDE:-tandoor}.${DOMAIN_NAME:-local}`)
      traefik.http.routers.tandoor.service: tandoor
      traefik.http.routers.tandoor.tls: true
      traefik.http.routers.tandoor.tls.certresolver: ${LETSENCRPT_CERTRESOLVER:-letsencrypt-cloudflare-dns-challenge}
      traefik.http.services.tandoor.loadbalancer.server.port: 80
      local.yacht.port.80: WebUI
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80 || exit 1
      interval: 10s
      timeout: 3s
      retries: 3
volumes:
  nginx_config: null
  staticfiles: null
networks:
  traefik_default:
    external: true
  default: null
x-dockge:
  urls:
    - https://${SERVICE_NAME_OVERRIDE:-tandoor}.${DOMAIN_NAME:-local}
